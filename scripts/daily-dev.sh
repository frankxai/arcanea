#!/bin/bash

# 📅 Daily Development Workflow for Arcanea
# Automated daily startup and progress tracking

set -e

echo "🌅 Starting Arcanea daily development session..."
echo "Date: $(date '+%Y-%m-%d %H:%M:%S')"
echo ""

# Create daily log
LOG_DIR="logs/daily"
mkdir -p $LOG_DIR
TODAY=$(date '+%Y-%m-%d')
DAILY_LOG="$LOG_DIR/$TODAY.md"

if [ ! -f "$DAILY_LOG" ]; then
    echo "📝 Creating today's development log..."
    cat > "$DAILY_LOG" << EOF
# Arcanea Development Log - $TODAY

## 🎯 Today's Goals
- [ ] Goal 1
- [ ] Goal 2
- [ ] Goal 3

## 📊 Progress Updates

### Morning Session
- Started at: $(date '+%H:%M')
- Focus: 

### Afternoon Session
- 

### Evening Wrap-up
- 

## 💡 Ideas & Notes


## 🐛 Issues Found


## ✅ Completed Today
- 

## 📋 Tomorrow's Priorities
- 

---
*Generated by daily-dev.sh*
EOF
    echo "✅ Created today's log: $DAILY_LOG"
else
    echo "✅ Today's log exists: $DAILY_LOG"
fi

# Check git status
echo "🔍 Checking git status..."
if [ -d ".git" ]; then
    UNCOMMITTED=$(git status --porcelain | wc -l)
    if [ $UNCOMMITTED -gt 0 ]; then
        echo "⚠️  You have $UNCOMMITTED uncommitted changes"
        echo "📋 Recent changes:"
        git status --short | head -5
        echo ""
        read -p "Commit changes before starting? (y/n): " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            git add .
            read -p "Commit message: " COMMIT_MSG
            git commit -m "$COMMIT_MSG"
            echo "✅ Changes committed"
        fi
    else
        echo "✅ Working directory clean"
    fi
else
    echo "⚠️  Not a git repository. Consider running 'git init'"
fi

# Check environment
echo "🔧 Checking development environment..."
if [ -f ".env" ]; then
    source .env
    ISSUES=0
    
    if [ -z "$OPENAI_API_KEY" ]; then
        echo "❌ Missing OPENAI_API_KEY"
        ((ISSUES++))
    fi
    
    if [ -z "$SUPABASE_URL" ]; then
        echo "❌ Missing SUPABASE_URL"
        ((ISSUES++))
    fi
    
    if [ $ISSUES -eq 0 ]; then
        echo "✅ Environment variables configured"
    else
        echo "⚠️  $ISSUES environment issues found"
        echo "   Check frank-input/apis/ for your keys"
    fi
else
    echo "❌ No .env file found. Run ./scripts/setup-dev.sh first"
fi

# Check dependencies
echo "📦 Checking dependencies..."
if [ -d "node_modules" ]; then
    echo "✅ Dependencies installed"
else
    echo "⚠️  Dependencies not installed. Running pnpm install..."
    pnpm install
fi

# Show current roadmap progress
echo "📍 Current Implementation Status:"
if [ -f "IMPLEMENTATION_ROADMAP.md" ]; then
    echo "   📖 Check IMPLEMENTATION_ROADMAP.md for detailed progress"
    # Could add automatic progress tracking here
else
    echo "   📄 Implementation roadmap not found"
fi

# Show today's priorities from frank-input
echo "🎯 Priority Check:"
if [ -f "frank-input/requirements/priority-features.md" ]; then
    echo "   📋 Check frank-input/requirements/priority-features.md"
else
    echo "   📝 No priority features defined yet"
fi

# Quick health check
echo "🏥 Running health check..."
if pnpm run --dry-run > /dev/null 2>&1; then
    echo "✅ Package scripts accessible"
else
    echo "⚠️  Package.json issues detected"
fi

# Development server options
echo ""
echo "🚀 Ready to start development!"
echo ""
echo "Available commands:"
echo "   1. pnpm dev                 - Start main development server"
echo "   2. cd apps/academy && pnpm dev  - Start academy app"
echo "   3. Open mockups/            - Review UI mockups"
echo "   4. Edit frank-input/        - Update requirements"
echo ""

# Auto-open development log
if command -v code &> /dev/null; then
    echo "📝 Opening today's development log in VS Code..."
    code "$DAILY_LOG"
elif command -v vim &> /dev/null; then
    echo "📝 You can edit today's log: vim $DAILY_LOG"
else
    echo "📝 Today's log: $DAILY_LOG"
fi

echo ""
echo "⏰ Session started at $(date '+%H:%M')"
echo "💡 Update your progress in: $DAILY_LOG"
echo "🌟 Build something amazing today!"

# Optional: Auto-start development server
read -p "🚀 Start development server now? (y/n): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "🚀 Starting development server..."
    if [ -d "apps/academy" ] && [ -f "apps/academy/package.json" ]; then
        cd apps/academy
        pnpm dev
    else
        pnpm dev
    fi
fi